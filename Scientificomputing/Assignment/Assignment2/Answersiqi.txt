/*Write a code to read a whole file into the memory and then
a. Count how many words there are in the file, words are separated by space,
newlines.
b. Suppose you are reading your source code file, please delete all the inline
comments, and write it into another source code file.*/

#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <ctype.h>

int main()
{
char c;
int n = 0;
int flag = 0;

FILE *readfile = fopen ( "codefile.txt", "r");
if (readfile == NULL)
{fputs( "File error",stderr);
exit(1);
}

fseek (readfile, 0, SEEK_SET);

while ((c= fgetc(readfile)) != EOF)
{
if ( isalnum(c) ) 
{ 
	flag = 1;
}
if (( c == ' ' || c == '\n') && flag == 1)
{
	n++;
	flag = 0;
}

}
fseek (readfile, 0, SEEK_END);
char end = fgetc(readfile);
if (end != ' ' || end != '\n') n=n+1;

fseek (readfile, 0, SEEK_SET);

//delete all the inline comments, and write it into another source code file.

FILE *writefile = fopen("nocomments.txt", "w");
if (writefile == NULL)
{fputs( "File error",stderr);
exit(1);
}

while ((c= fgetc(readfile)) != EOF)
{	
	if ( c == '/')
	{
		c = fgetc(readfile);
		if (c == '/')
		{
			while (c != '\n')
			{c = fgetc(readfile);}
		}
		else if( c == '*'|| c == '\n')
		{
			fprintf ( writefile, "%c", '/');
		}
	}

	
	fprintf ( writefile, "%c", c);	
	
}


printf (" %d words in the file.\n", n);

fclose (readfile);
fclose (writefile);


return 0;
}

/*Create two matrices, A and B, both are 10 by 10. Write a code to initialize the two
matrices by:
A[i][j] = i+j+1.0;
B[i][i] = 1/(i+j+1.0);
and write A and B into a binary file ¡§matrices.dat¡¨. */

#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int main()
{
	int i ;
	int j ;
	double A[10][10];
	double B[10][10];

	FILE *pf = fopen( "matrices.dat", "wb");
	if (pf == NULL)
	{
		fputs( "File error", stderr);
		exit(1);
	}

	// initialize matrices A and B;

	for (i = 0; i < 10; i++)
	{
		for (j = 0; j < 10; j++)
		{
			A[i][j] = i+j+1.0;
			B[i][j] = 1/(i+j+1.0);
		}
	}

	// write A into the file;

	for (i = 0; i < 10; i++)
	{
		fwrite(A[i], sizeof(double), 10, pf);
	}

	// write B into the file;
	
	for (i = 0; i < 10; i++)
	{
		fwrite(B[i], sizeof(double), 10, pf);
	}

	fclose(pf);
	return 0;
}

/* Write a code to read ¡§matrices.dat¡¨ into matrices A and B, multiply A and B to get
matrix C. Print out the average of all elements of C to a text file. */

#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int main()
{
	//read the file
	FILE *rf= fopen("matrices.dat", "rb");
	//check the file
	if (rf == NULL) 
	{
		fputs("File error", stderr);
		exit(1);
	}

	double A[10][10];
	double B[10][10];
	double C[10][10];
	int i, j, k;

	// read the file in the beginning;
	fseek(rf, 0, SEEK_SET);

	for (i = 0; i < 10; i++)
	{
		fread(A[i], sizeof(double), 10, rf);
	}
	
	for (i = 0; i < 10; i++)
	{
		fread(B[i], sizeof(double), 10, rf);
	}

	// multiply A and B to get C;

	for (i=0; i<10; i++)
	{
		for(j=0; j<10; j++)
		{
			C[i][j] = 0.0;
			for (k=0; k<10; k++)
			{
				C[i][j] += A[i][k] * B[k][j];
			}
		}
	}

	// compute the average of all elements of C;

	double aver = 0;
	for (i=0; i<10; i++)
	{
		for(j=0; j<10; j++)
		{
			aver = aver + C[i][j];
		}
	}
	aver = aver/100;


	FILE *wf = fopen("multiplication.txt", "w");
	if (rf == NULL) 
	{
		fputs("File error", stderr);
		exit(1);
	}
	fprintf(wf,"the average number of C is %f",aver);



	fclose(rf);
	fclose(wf);

	return 0;
}
